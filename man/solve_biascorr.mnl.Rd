% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/solve_biascorr.R
\name{solve_biascorr.mnl}
\alias{solve_biascorr.mnl}
\title{Bias correction solver for multinomial logit type problems}
\usage{
solve_biascorr.mnl(
  targets,
  areas,
  xmat,
  betas,
  priors = NULL,
  restrictions = NULL,
  options = downscale_control()
)
}
\arguments{
\item{targets}{A dataframe with columns lu.from, lu.to and value (all targets >= 0)}

\item{areas}{A dataframe of areas with columns lu.from, ns and value, with all areas >= 0
and with sum(areas) >= sum(targets)}

\item{xmat}{A dataframe of explanatory variables with columns ks and value.}

\item{betas}{A dataframe of coefficients with columns ks, lu.from, lu.to & value}

\item{priors}{A dataframe of priors (if no \code{betas} were supplied) with columns ns, lu.from, lu.to (with priors >= 0)}

\item{restrictions}{A dataframe with columns ns, lu.from, lu.to and value. Values must be zero or one. If restrictions are one, the MNL function is set to zero}

\item{options}{A list with solver options. Call \code{\link{downscale_control}} for default options and for more detail.}
}
\value{
A list containing
\itemize{
\item \code{out.res} A \code{n x p} matrix of area allocations
\item \code{out.solver} A list of the solver output
}
}
\description{
Bias correction solver for multinomial logit type problems
}
\details{
Given \code{p} targets matches either the projections from an MNL-type model or exogeneous priors.

You should not call this functions directly, call \code{\link{downscale}} instead.

min \deqn{\sum  (  z ij areas_i  - targets_j )^2}
s.t. \deqn{ z_ij = \mu_ij}
\deqn{\mu_ij = \lambda_ij / (1 + \sum \lambda_ij )}
\deqn{\lambda_ij = x_j + \exp xmat_i betas_j} or \eqn{\lambda_ij = x_j + priors_ij}
\deqn{x_j >= 0}
with \eqn{i = 1,...,n} and  \eqn{j = 1,...,n}. #' For each target either betas and xmats or priors have to be supplied. Priors have to be strictly larger or equal to zero.

When \code{cutoff} is specified, \eqn{z_ij} is defined as above if \eqn{mu_ij > cutoff}. If \eqn{mu_ij <= cutoff} then \eqn{z_ij = 0}. Per default \code{cutoff} is set to zero.

Targets should be specified in a dataframe with at least a lu.to and a value column. All targets must be larger or equal to zero. If an lu.from column is supplied it has to be specified in all arguments. In this case the bias correction is performed for all lu.from classes.

Areas correspond to either an areas per pixel (ns), with value or optionally the are of lu.from in a pixel. All areas must be larger The function expects lu.from

Restrictions are binary and optional. If restrictions are supplied, in case \eqn{restrictions_ij = 1} then  \eqn{z_ij = 0}.
}
\examples{
## A basic example
}

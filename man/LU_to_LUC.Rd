% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/LU_to_LUC.R
\name{LU_to_LUC}
\alias{LU_to_LUC}
\title{Convert land-use transition targets to gross land-use change transition targets}
\usage{
LU_to_LUC(targets.from, targets.to, restrictions = NULL, keep_areas = "both")
}
\arguments{
\item{targets.from}{A dataframe with columns lu and value (has to be numeric and >=0)}

\item{targets.to}{A dataframe with columns lu and value (has to be numeric and >=0)}

\item{restrictions}{A dataframe with columns lu.from (string), lu.to (string). Each row
of the dataframe specifies which transitions will be set to zero in the returned
land-use change transitions.}

\item{keep_areas}{Either "from", "to" or "both" (default). If \code{sum(targets.from$value)} is not
equal to \code{sum(targets.to$value)} this parameter specifies to which value the output should sum to.
If "both" is given and the sums differ, an artificial land use class \code{NODATA} is created.}
}
\value{
A data.frame with columns lu.from, lu.to and value.
}
\description{
Convert land-use transition targets to gross land-use change transition targets
}
\details{
When given two land-use targets, this function creates potential gross land-use
changes between them using Fienberg rebalancing. The transitions are forced towards
keeping as much targets in the same class as possible.

The total set of land use classes is the combination of unique \code{lu} values from
\code{targets.from} and \code{targets.to}.  If \code{keep_areas = "both"} the
\code{NODATA} land use class is also created. Land use transitions
are allocated to the \code{NODATA} class if the sum of \code{targets.from} is not
equal to \code{targets.to}.
}
\examples{
 targets.from = data.frame(lu = c("crop","grass"),value = c(10,5))
 targets.to = data.frame(lu = c("crop","grass","forest"),value = c(3,5,7))
 res = LU_to_LUC(targets.from = targets.from,targets.to = targets.to)
}

% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/downscale_pop.R
\name{downscale_pop}
\alias{downscale_pop}
\title{Downscaling of population data}
\usage{
downscale_pop(
  targets,
  times = NULL,
  xmat,
  betas,
  xmat.coltypes = NULL,
  xmat.proj = NULL,
  xmat.dyn.fun = xmat.identity,
  options = downscale_control_pop()
)
}
\arguments{
\item{targets}{A dataframe with columns times, pop.type (optional), and value (all targets >= 0)}

\item{times}{a character Vector of time steps for which downscaling is done. The first time-step has to be present in \code{targets}. Defaults to NULL, in which case the times are the unique time arguments in targets.}

\item{xmat}{A dataframe of explanatory variables with columns ns, ks and value.   Defaults to NULL.
\code{xmat} and \code{betas} have to be provided for each
\code{pop.type} in \code{targets}.}

\item{betas}{A dataframe of coefficients with columns ks, pop.type (optional), and value. Defaults to NULL.
\code{xmat} and \code{betas} have to be provided for each
\code{pop.type} in \code{targets}.}

\item{xmat.coltypes}{ks vector, each can be either "static", "dynamic", or "projected"}

\item{xmat.proj}{dataframe with columns times (character), ns (character), ks (character), value (numeric) must be present for each xmat.coltype specified as projected}

\item{xmat.dyn.fun}{function providing update for dynamic xmat columns, must take as arguments res, curr.areas, priors, xmat.proj must return ns x ks(dynamic) columns}

\item{options}{A list with solver options. Call \code{\link{downscale_control_pop}} for default options
and for more detail.}
}
\value{
A list containing
\itemize{
\item \code{out.res} Dataframe with columns times, ns, pop.type & value (population allocation)
\item \code{out.solver} A list of the solver output
\item \code{ds.inputs} A list documenting all the downscale function inputs
}
}
\description{
Downscaling of population data
}
\examples{
dgp1 = sim_pop(1000)
res1 = downscale_pop(targets = dgp1$targets,xmat = dgp1$xmat,betas = dgp1$betas)
}
